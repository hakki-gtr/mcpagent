name: PR Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME_BASE: admingentoro/gentoro
  IMAGE_NAME_PRODUCT: admingentoro/gentoro

jobs:
  # Stage 1: Unit Tests - Fast feedback for code quality
  unit-tests:
    uses: ./.github/workflows/test-unit.yml

  # Stage 2: Integration Tests - Test component interactions (optional)
  integration-tests:
    uses: ./.github/workflows/test-integration.yml
    needs: unit-tests

  # Stage 3: Build - Compile and package all components
  build:
    uses: ./.github/workflows/build.yml
    needs: [unit-tests, integration-tests]

  # Stage 4: Service Validation - Test HTTP services and artifacts
  service-validation:
    uses: ./.github/workflows/test-services.yml
    needs: build

  # Stage 5: Docker Build - Multi-platform container builds
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: service-validation
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Install xmllint
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils
    
    - name: Extract version from POM
      id: version
      run: |
        POM_FILE="src/mcpagent/pom.xml"
        CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" "$POM_FILE")
        VERSION_NUMBER=${CURRENT_VERSION%-SNAPSHOT}
        echo "version=$VERSION_NUMBER" >> $GITHUB_OUTPUT
        echo "full_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION (testing: $VERSION_NUMBER)"
    
    - name: Build base image
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        echo "Building base image for ${{ matrix.platform }}..."
        ./scripts/docker/build-base.sh "$VERSION" "" --platform "${{ matrix.platform }}"
    
    - name: Build product image
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        POM_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" src/mcpagent/pom.xml)
        JAR_NAME="mcpagent-$POM_VERSION.jar"
        echo "Building product image for ${{ matrix.platform }}..."
        
        ./scripts/docker/build-product.sh "$VERSION" "$JAR_NAME" "" --platform "${{ matrix.platform }}"

  # Stage 6: End-to-End Validation - Final service testing with Docker
  e2e-validation:
    name: End-to-End Validation
    runs-on: ubuntu-latest
    needs: docker-build
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install xmllint
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils
    
    - name: Extract version from POM
      id: version
      run: |
        POM_FILE="src/mcpagent/pom.xml"
        CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" "$POM_FILE")
        VERSION_NUMBER=${CURRENT_VERSION%-SNAPSHOT}
        echo "version=$VERSION_NUMBER" >> $GITHUB_OUTPUT
        echo "full_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION (testing: $VERSION_NUMBER)"
    
    - name: Validate services
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        PLATFORM="${{ matrix.platform }}"
        echo "Validating services on $PLATFORM..."
        
        # Use the validation script
        chmod +x scripts/docker/validate-services.sh
        ./scripts/docker/validate-services.sh "$VERSION" "$PLATFORM"
